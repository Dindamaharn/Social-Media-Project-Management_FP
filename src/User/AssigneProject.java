/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package User;

import Database.DatabaseConnection;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.SwingConstants;
import javax.swing.JScrollPane;
import javax.swing.BoxLayout; 

/**
 *
 * @author fikra
 */
public class AssigneProject extends JFrame {
    private int assigneeId;
    
    /**
     * Creates new form AssigneProject
     */
    public AssigneProject(int assigneeId) {
        this.assigneeId = assigneeId;
        setTitle("Assignee Projects");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(1366, 768);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());
        
        
        initComponents();
        
        projectPanel.setLayout(new BoxLayout(projectPanel, BoxLayout.Y_AXIS));
        add(projectPanel, BorderLayout.CENTER);


         //TxtDahboard
        TxtDashboard.setOpaque(true);
        TxtDashboard.setBackground(new java.awt.Color(211, 211, 211));
        TxtDashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        TxtDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            TxtDashboard.setBackground(new java.awt.Color(191, 191, 191));
        }
        
        public void mouseExited(java.awt.event.MouseEvent evt) {
        TxtDashboard.setBackground(new java.awt.Color(211, 211, 211));
        }
        });
        
        // TxtProject
        TxtProject.setOpaque(true);
        TxtProject.setBackground(new java.awt.Color(211, 211, 211));
        TxtProject.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TxtProject.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
        TxtProject.setBackground(new java.awt.Color(191, 191, 191));
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
        TxtProject.setBackground(new java.awt.Color(211, 211, 211));
        }
        });

        // TxtTask
        TxtTask.setOpaque(true);
        TxtTask.setBackground(new java.awt.Color(211, 211, 211));
        TxtTask.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TxtTask.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
        TxtTask.setBackground(new java.awt.Color(191, 191, 191));
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
        TxtTask.setBackground(new java.awt.Color(211, 211, 211));
        }
        });
        
        // TxtLogout
        TxtLogout.setOpaque(true);
        TxtLogout.setBackground(new java.awt.Color(211, 211, 211));
        TxtLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TxtLogout.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
        TxtLogout.setBackground(new java.awt.Color(191, 191, 191));
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
        TxtLogout.setBackground(new java.awt.Color(211, 211, 211));
        }
        });
        
        addProjectHeader();
        loadProjects();
        projectPanel.revalidate();
        projectPanel.repaint();  
        
  
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SidebarPanel = new javax.swing.JPanel();
        TxtDashboard = new javax.swing.JLabel();
        TxtProject = new javax.swing.JLabel();
        TxtLogout = new javax.swing.JLabel();
        TxtTask = new javax.swing.JLabel();
        LineSidebar = new javax.swing.JSeparator();
        LineSidebar1 = new javax.swing.JSeparator();
        LogoArasaka = new javax.swing.JLabel();
        TxtArasaka = new javax.swing.JLabel();
        TxtSocialMedia = new javax.swing.JLabel();
        TxtProjectManagement = new javax.swing.JLabel();
        projectPanel = new javax.swing.JPanel();
        Greeting = new javax.swing.JLabel();
        headerLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SidebarPanel.setBackground(new java.awt.Color(211, 211, 211));
        SidebarPanel.setPreferredSize(new java.awt.Dimension(220, 420));

        TxtDashboard.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TxtDashboard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TxtDashboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icondashboard.png"))); // NOI18N
        TxtDashboard.setText("DASHBOARD");
        TxtDashboard.setIconTextGap(15);
        TxtDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TxtDashboardMouseClicked(evt);
            }
        });

        TxtProject.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TxtProject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TxtProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/iconproject.png"))); // NOI18N
        TxtProject.setText("PROJECT");
        TxtProject.setIconTextGap(15);
        TxtProject.setInheritsPopupMenu(false);

        TxtLogout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TxtLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TxtLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/iconlogout.png"))); // NOI18N
        TxtLogout.setText("LOGOUT");
        TxtLogout.setIconTextGap(15);
        TxtLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TxtLogoutMouseClicked(evt);
            }
        });

        TxtTask.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TxtTask.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TxtTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icontask.png"))); // NOI18N
        TxtTask.setText("TASK");
        TxtTask.setIconTextGap(15);
        TxtTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TxtTaskMouseClicked(evt);
            }
        });

        LineSidebar.setForeground(new java.awt.Color(0, 0, 0));

        LineSidebar1.setForeground(new java.awt.Color(0, 0, 0));

        LogoArasaka.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/iconarasaka.png"))); // NOI18N

        TxtArasaka.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        TxtArasaka.setText("Arasaka");

        TxtSocialMedia.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        TxtSocialMedia.setText("Social Media ");

        TxtProjectManagement.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        TxtProjectManagement.setText("Project Management");

        javax.swing.GroupLayout SidebarPanelLayout = new javax.swing.GroupLayout(SidebarPanel);
        SidebarPanel.setLayout(SidebarPanelLayout);
        SidebarPanelLayout.setHorizontalGroup(
            SidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidebarPanelLayout.createSequentialGroup()
                .addGroup(SidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SidebarPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(SidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LineSidebar)
                            .addComponent(LineSidebar1)))
                    .addGroup(SidebarPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(SidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtProject, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxtTask, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SidebarPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(TxtLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SidebarPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(SidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SidebarPanelLayout.createSequentialGroup()
                                .addComponent(LogoArasaka)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(SidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(SidebarPanelLayout.createSequentialGroup()
                                        .addComponent(TxtArasaka, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SidebarPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(TxtSocialMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(SidebarPanelLayout.createSequentialGroup()
                                .addGroup(SidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(SidebarPanelLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(TxtProjectManagement, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(TxtDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        SidebarPanelLayout.setVerticalGroup(
            SidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidebarPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(SidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LogoArasaka)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SidebarPanelLayout.createSequentialGroup()
                        .addComponent(TxtArasaka)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtSocialMedia)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtProjectManagement)
                .addGap(76, 76, 76)
                .addComponent(TxtDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LineSidebar, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TxtProject, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TxtTask, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 251, Short.MAX_VALUE)
                .addComponent(LineSidebar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TxtLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        projectPanel.setBackground(new java.awt.Color(214, 201, 197));

        javax.swing.GroupLayout projectPanelLayout = new javax.swing.GroupLayout(projectPanel);
        projectPanel.setLayout(projectPanelLayout);
        projectPanelLayout.setHorizontalGroup(
            projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1297, Short.MAX_VALUE)
        );
        projectPanelLayout.setVerticalGroup(
            projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 648, Short.MAX_VALUE)
        );

        Greeting.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Greeting.setText("Assignee Project");

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headerLabel.setText("{user}");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SidebarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Greeting)
                    .addComponent(headerLabel)
                    .addComponent(projectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SidebarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(headerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Greeting)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(projectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtDashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TxtDashboardMouseClicked
        DashboardUser dashboard = new DashboardUser(assigneeId);
        dashboard.setVisible(true);
        this.dispose(); // Menutup form saat ini jika perlu
    }//GEN-LAST:event_TxtDashboardMouseClicked

    private void TxtLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TxtLogoutMouseClicked
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Are you sure want to exit?",
            "Logout Confirmation",
            JOptionPane.YES_NO_OPTION
        );

        if (confirm ==JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_TxtLogoutMouseClicked

    private void TxtTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TxtTaskMouseClicked
        AssigneTask task = new AssigneTask(assigneeId);
        task.setVisible(true);
        this.dispose(); // Menutup form saat ini jika perlu
    }//GEN-LAST:event_TxtTaskMouseClicked
    
    private void addProjectHeader() {
        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new GridLayout(1, 4));
        headerPanel.setMaximumSize(new Dimension(Integer.MAX_VALUE, 70));
        headerPanel.setOpaque(false);
        headerPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        

        JLabel nameHeader = new JLabel("Project Name");
        nameHeader.setFont(new Font("Tahoma", Font.BOLD, 23));
        nameHeader.setHorizontalAlignment(SwingConstants.LEFT);

       
        JLabel progressHeader = new JLabel("Progress", SwingConstants.CENTER);
        progressHeader.setFont(new Font("Tahoma", Font.BOLD, 23));
        progressHeader.setHorizontalAlignment(SwingConstants.LEFT);

        JLabel remainingHeader = new JLabel("Remaining Time", SwingConstants.CENTER);
        remainingHeader.setFont(new Font("Tahoma", Font.BOLD, 23));
        remainingHeader.setHorizontalAlignment(SwingConstants.CENTER);

        JLabel actionHeader = new JLabel(""); 
        actionHeader.setHorizontalAlignment(SwingConstants.RIGHT);

        headerPanel.add(nameHeader);
        headerPanel.add(progressHeader);
        headerPanel.add(remainingHeader);
        headerPanel.add(actionHeader);

        projectPanel.add(headerPanel);
    }
    
    private void addProjectRow(String projectName, int progress, String remainingTime, int projectId, int assigneeId) {
        final int currentProjectId = projectId;
        int assigneeIdProjects = assigneeId;
        JPanel rowPanel = new JPanel(new GridLayout(1, 4));
        rowPanel.setMaximumSize(new Dimension(Integer.MAX_VALUE, 40));
        rowPanel.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.LIGHT_GRAY));
        rowPanel.setBorder(BorderFactory.createEmptyBorder(0, 10, 0, 0));
        
        rowPanel.setOpaque(false);

        JLabel nameLabel = new JLabel(projectName);
        nameLabel.setFont(new Font("Tahoma", Font.PLAIN, 18));

        // Progress Panel
//        JPanel progressPanel = new JPanel(new BorderLayout());
        JPanel progressPanel = new JPanel();
        progressPanel.setLayout(new GridLayout(1, 2));
        progressPanel.setOpaque(false);

        JProgressBar progressBar = new JProgressBar(0, 100);
        progressBar.setValue(progress);
        progressBar.setForeground(new Color(214,201,197)); 
        progressBar.setBackground(new Color(12,44,71)); 
        progressBar.setStringPainted(false);
      
        

        JLabel progressLabel = new JLabel(progress + "%", SwingConstants.LEFT);
        progressLabel.setFont(new Font("Tahoma", Font.PLAIN, 18));
        progressPanel.add(progressBar, BorderLayout.CENTER);
        progressPanel.add(progressLabel, BorderLayout.SOUTH);

        JLabel remainingLabel = new JLabel(remainingTime, SwingConstants.CENTER);
        remainingLabel.setFont(new Font("Tahoma", Font.PLAIN, 18));

        JButton detailsButton = new JButton("Details");
        detailsButton.addActionListener(e -> {
            dispose();
    //        System.out.println("DEBUG: Mengklik project ID " + currentProjectId);
            new ProjectDetails(currentProjectId, assigneeIdProjects).setVisible(true);
        });

        rowPanel.add(nameLabel);
        rowPanel.add(progressPanel);
        rowPanel.add(remainingLabel);
        rowPanel.add(detailsButton);

        projectPanel.add(Box.createVerticalStrut(5)); 
        projectPanel.add(rowPanel);
        projectPanel.revalidate();
        projectPanel.repaint();
        
    }
    
    private void loadProjects() {
        try (Connection conn = DatabaseConnection.getConnection()){
            String query = """
            SELECT DISTINCT p.id, p.name
            FROM projects p
            JOIN tasks t ON p.id = t.projects_id
            WHERE t.assignees_id = ?
            """;
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1, assigneeId);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                final int projectId = rs.getInt("id");
                String name = rs.getString("name");

                int remainingDays = getRemainingTimeForProject(projectId);
                String remainingStr = (remainingDays >= 0) ? remainingDays + " days" : "No deadline";
                

                int progress = getProjectProgress(projectId);

                addProjectRow(name, progress, remainingStr, projectId, this.assigneeId);
            }

            rs.close();
            ps.close();
            
            //nama user header
            String queryUserHeaderName = "SELECT name FROM assignees WHERE id = ? ";
            PreparedStatement stmtUserHeaderName = conn.prepareStatement(queryUserHeaderName);
            stmtUserHeaderName.setInt(1, assigneeId);
            ResultSet rsUserHeaderName = stmtUserHeaderName.executeQuery();
            if (rsUserHeaderName.next()){
                String username = rsUserHeaderName.getString("name");
                headerLabel.setText(username);
                
            }
            rsUserHeaderName.close();
            stmtUserHeaderName.close();
            
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private int getProjectProgress(int projectId) {
        int totalTasks = 0;
        int completedTasks = 0;

        try {
            Connection conn = DatabaseConnection.getConnection();

            String totalQuery = "SELECT COUNT(*) AS total FROM tasks WHERE projects_id = ?";
            PreparedStatement psTotal = conn.prepareStatement(totalQuery);
            psTotal.setInt(1, projectId);
            ResultSet rsTotal = psTotal.executeQuery();
            if (rsTotal.next()) {
                totalTasks = rsTotal.getInt("total");
            }
            rsTotal.close();
            psTotal.close();

            String completedQuery = """
                SELECT COUNT(*) AS completed 
                FROM tasks t 
                JOIN status_tracks s ON t.id = s.tasks_id 
                WHERE t.projects_id = ? AND s.status = 'completed'
            """;
            PreparedStatement psCompleted = conn.prepareStatement(completedQuery);
            psCompleted.setInt(1, projectId);
            ResultSet rsCompleted = psCompleted.executeQuery();
            if (rsCompleted.next()) {
                completedTasks = rsCompleted.getInt("completed");
            }
            rsCompleted.close();
            psCompleted.close();

            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
    }

    if (totalTasks == 0) return 0;
    return (int) (((double) completedTasks / totalTasks) * 100);
    }

    private int getRemainingTimeForProject(int projectId) {
        int remainingDays = -1;
        try {
            Connection conn = DatabaseConnection.getConnection();
            String query = "SELECT MAX(deadline) AS max_deadline FROM tasks WHERE projects_id = ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1, projectId);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                Date maxDeadline = rs.getDate("max_deadline");
                if (maxDeadline != null) {
                    LocalDate deadline = maxDeadline.toLocalDate();
                    LocalDate today = LocalDate.now();
                    remainingDays = (int) ChronoUnit.DAYS.between(today, deadline);
                }
            }

            rs.close();
            ps.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return remainingDays;
    }
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Greeting;
    private javax.swing.JSeparator LineSidebar;
    private javax.swing.JSeparator LineSidebar1;
    private javax.swing.JLabel LogoArasaka;
    private javax.swing.JPanel SidebarPanel;
    private javax.swing.JLabel TxtArasaka;
    private javax.swing.JLabel TxtDashboard;
    private javax.swing.JLabel TxtLogout;
    private javax.swing.JLabel TxtProject;
    private javax.swing.JLabel TxtProjectManagement;
    private javax.swing.JLabel TxtSocialMedia;
    private javax.swing.JLabel TxtTask;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel projectPanel;
    // End of variables declaration//GEN-END:variables
}
